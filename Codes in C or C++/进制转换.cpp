/**
 * @author Spacebody
 * 把长度不大于10的二进制数转化为十进制数
 */

#include <iostream>
#include <cmath> //导入头文件 cmath， 用于下面使用 pow 幂函数运算。
using namespace std; //声明命名空间
int main(){
	int a,b=0,c=0,flag=0; 
	/**
	 *a 为要输入的值
	 * b 为二进制数每个位数的值
	 * c 用来计算最后结果，也就是要求的十进制数
	 * flag 用来判断输入的值是否为二进制数
	 */
	 
	cin>>a; 
	for(int i=9;i>=0;i--){ 
		/*
			循环遍历，由于程序要求输入的二进制小于10，因此从9开始循环到0， 
			共10次循环，之所以这么做是因为 i 还可以表示10的幂指数，因此下
			面计算 c 的值就使用了 i.
		 */

		b=a/pow(10,i); 
		/*
			直接整出得到每个位数的值，要么0，要么1.如果不是 flag 就是变为1，
			肯定是输入的数不是二进制。
		 */
		
		if(b==1){ //if 判断语句，注意判断等不等要用”==“而不是赋值号”=“
			a=a-b*pow(10,i);
			c+=pow(2,i); //相当于 c=c+pow(2,i)
		}else if(b==0){
			continue;//b 等于 0，说明该位数没有，因此继续遍历下一个位数
		}else{
			flag=1;
			break;//前面提到的如果输入值不是二进制数的情况，那么就终止循环，不用费力气了
		};

	}

	if(flag==1){ 
		cout<<"Error"<<endl; //报错
	}else{
		cout<<c<<endl; //一切正常输出所求结果
	}
	return 0; //注意主函数要求最后得到一个整数返回值，一般为0
}